CREATE DATABASE ORDERS;
USE ORDERS;

CREATE TABLE SALESMAN(SALESMAN_ID INT,SNAME VARCHAR(10),CITY VARCHAR(20),COMMISSION INT,PRIMARY KEY(SALESMAN_ID));

CREATE TABLE CUSTOMER(CUSTOMER_ID INT,CNAME VARCHAR(10),CITY VARCHAR(10),GRADE INT,SALESMAN_ID INT,PRIMARY KEY(CUSTOMER_ID),FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE CASCADE);

CREATE TABLE ORDERS(ORDER_NO INT,AMT REAL,ORDER_DATE DATE,CUSTOMER_ID INT,SALESMAN_ID INT,PRIMARY KEY(ORDER_NO),FOREIGN KEY(SALESMAN_ID) REFERENCES SALESMAN(SALESMAN_ID) ON DELETE CASCADE,FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE CASCADE);

INSERT INTO SALESMAN VALUES(1,"JOHN","BLORE",25);
INSERT INTO SALESMAN VALUES(2,"RAVI","BLORE",20);
INSERT INTO SALESMAN VALUES(3,"KUMAR","MYSORE",15);
INSERT INTO SALESMAN VALUES(4,"SMITH","DELHI",30);
INSERT INTO SALESMAN VALUES(5,"HARSHA","HYD",15);
SELECT * FROM SALESMAN;

INSERT INTO CUSTOMER VALUES(10,"PREETHI","BLORE",100,1);
INSERT INTO CUSTOMER VALUES(20,"VIVEK","MLORE",300,1);
INSERT INTO CUSTOMER VALUES(30,"BHASKAR","CHENNAI",400,2);
INSERT INTO CUSTOMER VALUES(40,"CHETHAN","BLORE",200,2);
INSERT INTO CUSTOMER VALUES(50,"MAMATHA","BLORE",400,3);
SELECT * FROM CUSTOMER;

INSERT INTO ORDERS VALUES(100,5000,"2017-05-04",10,1);
INSERT INTO ORDERS VALUES(200,450,"2017-01-20",10,2);
INSERT INTO ORDERS VALUES(300,1000,"2017-02-24",40,2);
INSERT INTO ORDERS VALUES(400,3500,"2017-04-13",50,3);
INSERT INTO ORDERS VALUES(500,550,"2017-03-19",30,2);
INSERT INTO ORDERS VALUES(600,1150,"2017-03-19",40,3);
SELECT * FROM ORDERS;

/*1. Count the customers with grades above Bangalore’s average. */
SELECT GRADE,COUNT(*) FROM CUSTOMER WHERE GRADE>(SELECT AVG(GRADE) FROM CUSTOMER WHERE CITY="BLORE") GROUP BY GRADE;

/*2. Find the name and numbers of all salesmen who had more than one customer. */
SELECT S.SALESMAN_ID,S.SNAME FROM SALESMAN S WHERE S.SALESMAN_ID IN (SELECT SALESMAN_ID FROM CUSTOMER GROUP BY SALESMAN_ID HAVING COUNT(*)>1);

/*3. List all salesmen and indicate those who have and don’t have customers in their cities (Use UNION operation.) */
/*DOUBT*/
(SELECT S.SALESMAN_ID,S.SNAME,C.CNAME FROM SALESMAN S,CUSTOMER C WHERE S.SALESMAN_ID=C.SALESMAN_ID AND S.CITY=C.CITY)
 UNION
 (SELECT S.SALESMAN_ID,S.SNAME,'NO MATCH' FROM SALESMAN S,CUSTOMER C WHERE S.SALESMAN_ID=C.SALESMAN_ID AND S.CITY!=C.CITY);
 
/*4. Create a view that finds the salesman who has the customer with the highest order of a day. */ 
CREATE VIEW MAX_AMT AS SELECT O1.ORDER_DATE,S.SNAME FROM ORDERS O1,SALESMAN S WHERE S.SALESMAN_ID=O1.SALESMAN_ID AND O1.AMT=(SELECT MAX(O2.AMT) FROM ORDERS O2 WHERE O1.ORDER_DATE=O2.ORDER_DATE GROUP BY O2.ORDER_DATE);
SELECT * FROM MAX_AMT;

/*5. Demonstrate the DELETE operation by removing salesman with id 1000. All his orders must also be deleted. */
DELETE FROM SALESMAN WHERE SALESMAN_ID=1;
SELECT * FROM SALESMAN;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;

CREATE TABLE SHIPMENT(S_NO INT,SNAME VARCHAR(10),SDATE DATE,ORD_NO INT,PRIMARY KEY(S_NO),FOREIGN KEY(ORD_NO) REFERENCES ORDERS(ORDER_NO) ON DELETE CASCADE);
INSERT INTO SHIPMENT VALUES(1,"ABC","2017-05-10",100);
INSERT INTO SHIPMENT VALUES(2,"MNO","2017-05-10",100);
INSERT INTO SHIPMENT VALUES(3,"UVW","2017-05-10",200);
INSERT INTO SHIPMENT VALUES(4,"PQR","2017-05-10",400);
INSERT INTO SHIPMENT VALUES(5,"XYZ","2017-05-10",300);
SELECT * FROM SHIPMENT;

SELECT S.S_NO,AVG(O.AMT) FROM SHIPMENT S,ORDERS O WHERE O.ORDER_NO=S.ORD_NO GROUP BY S.S_NO,O.CUSTOMER_ID;

SELECT S.SALESMAN_ID FROM SALESMAN S,ORDERS O WHERE S.SALESMAN_ID=O.SALESMAN_ID GROUP BY O.CUSTOMER_ID HAVING COUNT(O.ORDER_NO)>1;

SELECT * FROM ORDERS O,CUSTOMER C WHERE EXISTS(SELECT * FROM SALESMAN S WHERE S.SALESMAN_ID=O.SALESMAN_ID) AND C.CUSTOMER_ID=O.CUSTOMER_ID;